# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: ALL_IN_EIGHT

on:
    workflow_dispatch:
    schedule:
        - cron: "0 0 * * *"
    watch:
        types: [started]
    repository_dispatch:
        types: all_in_eight

env:
    # 推送专用
    PUSH_KEY: ${{ secrets.PUSH_KEY }}
    BARK_PUSH: ${{ secrets.BARK_PUSH }}
    BARK_SOUND: ${{ secrets.BARK_SOUND }}
    TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
    TG_USER_ID: ${{ secrets.TG_USER_ID }}
    DD_BOT_TOKEN: ${{ secrets.DD_BOT_TOKEN }}
    DD_BOT_SECRET: ${{ secrets.DD_BOT_SECRET }}
    IGOT_PUSH_KEY: ${{ secrets.IGOT_PUSH_KEY }}
    QQ_SKEY: ${{ secrets.QQ_SKEY }}
    QQ_MODE: ${{ secrets.QQ_MODE }}
    QYWX_KEY: ${{ secrets.QYWX_KEY }}
    QYWX_AM: ${{ secrets.QYWX_AM }}
    PUSH_PLUS_TOKEN: ${{ secrets.PUSH_PLUS_TOKEN }}
    PUSH_PLUS_USER: ${{ secrets.PUSH_PLUS_USER }}
    # 安全配置
    CORE_URL: ${{ secrets.CORE_URL }}
    AES_IV: ${{ secrets.AES_IV }}
    AES_KEY: ${{ secrets.AES_KEY }}
    EXTEND_URL: ${{ secrets.EXTEND_URL }}
    # 通用配置
    JD_COOKIE: ${{ secrets.JD_COOKIE }}
    JD_USER_AGENT: ${{ secrets.JD_USER_AGENT }}
    JD_DEBUG: ${{ secrets.JD_DEBUG }}
    # 额外配置
    SMART_REPLACE: ${{ secrets.SMART_REPLACE }} # 通用替换规则,支持文字替换和正则替换,数据会进行base64解密后使用,[{"match":"要替换的内容",replace:"替换后的内容","desc":"方便自己查看的内容描述","condition":"替换的前提条件,没有就不要填"}]

jobs:
    jd_bean_sign:
        name: 每日签到
        runs-on: ubuntu-latest
        if: github.event.repository.owner.id == github.event.sender.id
        steps:
            - name: 拉取代码
              uses: actions/checkout@v2
            - name: 设置运行环境-Node.js 12
              uses: actions/setup-node@v2
              with:
                  node-version: "12"
            - name: 安装依赖包
              run: |
                  npm install
            - name: "运行 【JD每日签到】"
              timeout-minutes: 30
              run: |
                  node source_of_happiness.js
              env:
                  SYNC_URL: ./data/jd_scripts/jd_bean_sign.js
                  # 独立配置
                  JD_BEAN_STOP: ${{ secrets.JD_BEAN_STOP }} # 自定义延迟签到,单位毫秒. 默认分批并发无延迟. 延迟作用于每个签到接口, 如填入延迟则切换顺序签到(耗时较长),如需填写建议输入数字1
                  JD_BEAN_SIGN_STOP_NOTIFY: ${{ secrets.JD_BEAN_SIGN_STOP_NOTIFY || github.event.client_payload.JD_BEAN_SIGN_STOP_NOTIFY}} # jd_bean_sign.js脚本运行后不推送签到结果通知，默认推送，填true表示不发送通知
                  JD_BEAN_SIGN_NOTIFY_SIMPLE: ${{ secrets.JD_BEAN_SIGN_NOTIFY_SIMPLE || github.event.client_payload.JD_BEAN_SIGN_NOTIFY_SIMPLE}} # jd_bean_sign.js脚本运行后推送签到结果简洁版通知，默认推送全部签到结果，填true表示推送简洁通知
    jd_jxd:
        name: 京小兑
        runs-on: ubuntu-latest
        if: github.event.repository.owner.id == github.event.sender.id
        steps:
            - name: 拉取代码
              uses: actions/checkout@v2
            - name: 设置运行环境-Node.js 12
              uses: actions/setup-node@v2
              with:
                  node-version: "12"
            - name: 安装依赖包
              run: |
                  npm install
            - name: "运行 【京小兑】"
              timeout-minutes: 60
              run: |
                  node source_of_happiness.js
              env:
                  SYNC_URL: ./data/jd_scripts/jd_jxd.js
                  # 独立配置
                  JD_BEAN_STOP: ${{ secrets.JD_BEAN_STOP }} # 自定义延迟签到,单位毫秒. 默认分批并发无延迟. 延迟作用于每个签到接口, 如填入延迟则切换顺序签到(耗时较长),如需填写建议输入数字1
                  JD_BEAN_SIGN_STOP_NOTIFY: ${{ secrets.JD_BEAN_SIGN_STOP_NOTIFY || github.event.client_payload.JD_BEAN_SIGN_STOP_NOTIFY}} # jd_bean_sign.js脚本运行后不推送签到结果通知，默认推送，填true表示不发送通知
                  JD_BEAN_SIGN_NOTIFY_SIMPLE: ${{ secrets.JD_BEAN_SIGN_NOTIFY_SIMPLE || github.event.client_payload.JD_BEAN_SIGN_NOTIFY_SIMPLE}} # jd_bean_sign.js脚本运行后推送签到结果简洁版通知，默认推送全部签到结果，填true表示推送简洁通知
